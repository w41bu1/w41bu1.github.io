[{"categories":["Web"],"content":"A powerful and the most popular content management system (CMS).","date":"2025-08-21","objectID":"/vi/posts/2025-08-21-wordpress-local-and-debugging/","tags":["cms","php","wordpress"],"title":"WordPress Local and Debugging","uri":"/vi/posts/2025-08-21-wordpress-local-and-debugging/"},{"categories":["Web"],"content":"WordPress là một hệ thống quản lý nội dung (CMS) mạnh mẽ và phổ biến nhất cho phép bạn tạo, quản lý và tùy chỉnh các trang web và blog một cách dễ dàng. Nó là open-source CMS, được xây dựng trên PHP và sử dụng cơ sở dữ liệu MySQL hoặc Maria DB. Ra đời năm 2003, ban đầu chỉ để viết blog, sau đó phát triển thành nền tảng tạo website, cửa hàng online, diễn đàn, landing page… Hiện nay, hơn 40% website trên thế giới chạy bằng WordPress. Có 2 phiên bản WordPress: WordPress.com Dịch vụ hosting do Automattic cung cấp Bạn chỉ cần đăng ký tài khoản, không phải cài đặt Hạn chế tùy chỉnh, muốn nâng cao thì phải trả phí WordPress.org Mã nguồn mở, bạn tự tải về và cài đặt lên hosting/server riêng Tùy chỉnh toàn diện, có thể cài plugin, theme, viết code, tạo website theo ý mình Ecosystem Core: CMS chính Plugin: Một phần mềm bổ sung có thể được cài đặt trên trang web WordPress để mở rộng chức năng của nó và thêm các tính năng mới Themes: Một phần mềm bổ sung đại diện cho sự xuất hiện trực quan và bố cục của một trang web WordPress Why WordPress Hacking? State of WordPress Security in 2024 Most Popular Hiện tại hơn 40% website trên toàn thế giới chạy WordPress Nghĩa là hacker chỉ cần tìm ra một lỗ hổng phổ biến =\u003e có thể khai thác hàng triệu site cùng lúc Giống như “cá nhiều thì chài ở đó” Plugin and Theme WordPress Core đã được xem xét trong 1 thời gian dài bởi hàng ngàn developers và researchers. Kết quả là rất khó để kẻ tấn công có thể đột nhập vào Tuy nhiên, có hàng chục ngàn plugin và theme từ nhiều nguồn, chất lượng không đồng đều được sử dụng Nhiều plugin code bảo mật kém, không còn được cập nhật. Hacker chỉ cần scan plugin/theme để tìm version lỗi thời, rồi khai thác Setup WordPress for Hacking Có rất nhiều cách để setup WorkPress, tìm kiếm bằng Google có thể cung cấp nhiều bài viết về nó. Ở đây tôi sẽ setup trên máy ảo Ubuntu (22.04): Không ảnh hưởng đến các dịch vụ của máy thật WordPress tương đối nhẹ để sử dụng trên máy ảo Install and configure WordPress Install Dependencies Cài toàn bộ stack cần thiết để chạy WordPress (web server + database + PHP + các extension quan trọng). sudo apt install apache2 \\ ghostscript \\ libapache2-mod-php \\ mysql-server \\ php \\ php-bcmath \\ php-curl \\ php-imagick \\ php-intl \\ php-json \\ php-mbstring \\ php-mysql \\ php-xml \\ php-zip Install WordPress Tải và cài mã nguồn WordPress vào thư mục web. # Tạo folder để lưu trữ mã nguồn website sudo mkdir -p /srv/www # Đổi owner thành www-data, đây là user mặc định của Apache/Nginx để chạy web server # Khi Apache/NGINX khởi động, nó không chạy bằng root (nguy hiểm vì có toàn quyền hệ thống), mà sẽ drop xuống chạy dưới quyền www-data. sudo chown www-data: /srv/www # Tải gói WordPress mới nhất từ trang chính thức # Giải nén vao thưc mục /srv/www được tạo ở trên curl https://wordpress.org/latest.tar.gz | sudo -u www-data tar zx -C /srv/www Có thể tải phiên bản cụ thể bằng: curl https://wordpress.org/wordpress-6.6.2.tar.gz | sudo -u www-data tar zx -C /srv/www Cài từ wordpress.org là cách chuẩn nhất và ít rủi ro: Ubuntu có sẵn package wordpress trong repo. Nhưng nó thường cũ hơn nhiều so với bản chính thức trên wordpress.org Cộng đồng WordPress chỉ hỗ trợ khi bạn dùng bản chính thức từ wordpress.org, vì nếu bạn gặp lỗi do package của Ubuntu thì họ không giải quyết được. {: .prompt-info } Configure Apache for WordPress Tạo file /etc/apache2/sites-available/wordpress.conf cấu hình Apache cho WordPress: # Lắng nghe trên tất cả địa chỉ IP (*) tại port 80 (HTTP). \u003cVirtualHost *:80\u003e # Thư mục gốc của website (nơi chứa mã nguồn WordPress). DocumentRoot /srv/www/wordpress \u003cDirectory /srv/www/wordpress\u003e Options FollowSymLinks # Cho phép file .htaccess ghi đè một số thiết lập liên quan đến bảo mật và URL rewriting. AllowOverride Limit Options FileInfo # Khi truy cập thư mục, Apache sẽ tìm file index.php để hiển thị. DirectoryIndex index.php # Cho phép tất cả mọi người truy cập (cần cho website public). Require all granted \u003c/Directory\u003e # Riêng thư mục wp-content (chứa plugin, ","date":"2025-08-21","objectID":"/vi/posts/2025-08-21-wordpress-local-and-debugging/:0:0","tags":["cms","php","wordpress"],"title":"WordPress Local and Debugging","uri":"/vi/posts/2025-08-21-wordpress-local-and-debugging/"},{"categories":["Web"],"content":"How to create your personal blog using Github Pages with \"comment\" feature","date":"2025-08-19","objectID":"/vi/posts/2025-08-19-github-pages-with-jekyll-themes-and-giscus/","tags":["blog","jekyll","giscus","github"],"title":"Github Pages with Jekyll themes and Giscus","uri":"/vi/posts/2025-08-19-github-pages-with-jekyll-themes-and-giscus/"},{"categories":["Web"],"content":"Khi bắt đầu tạo blog cá nhân, có ba công cụ bạn cần biết: GitHub Pages, Jekyll và Giscus. Github Pages: Dịch vụ miễn phí từ GitHub, cho phép bạn triển khai website tĩnh trực tiếp từ repository. Chỉ cần push code lên GitHub, blog của bạn sẽ tự động xuất hiện trên Internet mà không cần server riêng. Jekyll: Một static site generator tích hợp sẵn với GitHub Pages. Jekyll giúp bạn dễ dàng tạo blog từ các file Markdown, tổ chức nội dung bằng template và theme sẵn có. Giscus: Một hệ thống bình luận hiện đại dựa trên GitHub Discussions. Thay vì phải dùng dịch vụ ngoài như Disqus, bạn có thể tận dụng GitHub để quản lý comment, vừa gọn nhẹ vừa thân thiện với developer. Requirements Tài khoản Github Kiến thức cơ bản về Markdown Creating a Site Repository Ở đây, tôi sử dụng Chirpy themes, đây là theme khá nổi tiếng dành cho GitHub Pages, được tối ưu cho việc viết blog cá nhân hoặc technical blog. Các bước thực hiện: Đăng nhập vào Github và di chuyển đến starter Thay vì Fork, ta click Use this template và chọn Create a new repository để tự động tạo Site Repository. Đặt tên cho Repository mới \u003cusername\u003e.github.io, thay đổi \u003cusername\u003e thành Github username của bạn. Setting up the Environment Có 2 lý do chính bạn nên setup môi trường trên máy local khi phát triển blog: Sau khi push code lên Repository, GitHub Actions sẽ mất một khoảng thời gian để chạy rồi mới build và render ra GitHub Pages. Khi dev trực tiếp trên local, bạn có thể quan sát kết quả ngay lập tức, nhanh hơn và thuận tiện hơn. Using Dev Containers (Recommended for Windows) Dev Containers cung cấp một môi trường cô lập bằng Docker, giúp tránh xung đột với hệ thống và đảm bảo mọi dependency đều được quản lý trong container. Các bước thực hiện: Cài đặt Docker: Trên Windows/macOS: cài Docker Desktop. Trên Linux: cài Docker Engine. Cài VS Code và extension Dev Containers. Clone repository: Nếu dùng Docker Desktop: mở VS Code và clone repo trong container volume. Nếu dùng Docker Engine: clone repo về local, sau đó mở bằng container trong VS Code. Chờ quá trình thiết lập Dev Containers hoàn tất. Setting up Natively (Recommended for Unix-like OS) Với các hệ điều hành dạng Unix-like (Linux, macOS), bạn có thể setup môi trường trực tiếp (native) để đạt hiệu năng tốt nhất. Ngoài ra, vẫn có thể dùng Dev Containers như một lựa chọn thay thế. Các bước thực hiện: Làm theo hướng dẫn cài đặt Jekyll và đảm bảo đã cài đặt Git. Clone repository về máy local. Nếu bạn fork theme, cài Node.js và chạy bash tools/init.sh trong thư mục gốc để khởi tạo repo. Chạy lệnh dưới đây ở thư mục gốc để toàn bộ gem sẽ được cài vào ./vendor/bundle/ trong project, không cần sudo và không đụng gì đến /var/lib/gems.. bundle config set --local path 'vendor/bundle' bundle install Usage Start the Jekyll Server Để chạy site trên local, sử dụng lệnh dưới đây: bundle exec jekyll s Configuration Một số biến cần cấu hình trong _config.yml, bao gồm: lang: Set language cho website của bạn url: Trỏ đến website của bạn title: Title chính, nằm dưới avatar tagline: Subtitle, mô tả trang web avatar: hỗ trợ local và CORS resources, có thể sử dụng gif Comment feature via Giscus Ta sử dụng Giscus làm hệ thống comment cho website, ngoài ra còn các option khác như: Disqus, Utterances, tất cả đều miễn phí. Các bước thực hiện: Cài đặt giscus vào Github. Vào Settings của repository chọn General và bật Discussions để giscus lưu comments vào Discussions. Nhập repository \u003cusername\u003e/\u003cusername\u003e.github.io, thông báo màu xanh lá xuất hiện khi các tiêu chí ở trên được đáp ứng. Chọn thể loại discussion và chủ đề cho website. Cấu hình giscus trong _config.yml provider: chọn giscus giscus: mapping các biến tương ứng đã làm ở giscus vào biến giscus. Customize the Favicon Tạo favicon riêng cho website của bạn, không phải sử dụng favicon mặc định của themes Các bước thực hiện: Truy cập Favicon Genarate Click Browse chọn favicon cần tạo, sau đó click Create Favicon để tạo. Click Download the generated favicon để tải các file chứa các favicon về. Giải nén","date":"2025-08-19","objectID":"/vi/posts/2025-08-19-github-pages-with-jekyll-themes-and-giscus/:0:0","tags":["blog","jekyll","giscus","github"],"title":"Github Pages with Jekyll themes and Giscus","uri":"/vi/posts/2025-08-19-github-pages-with-jekyll-themes-and-giscus/"}]